{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","height","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,UAAU,8EACVC,KAAK,OACLC,YAAY,YACZC,MAAOX,EACPY,SApBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,qBAAKT,UAAU,WAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKuB,IAAKd,EAAKT,UAAU,iDAAiDwB,IAAKL,EAAOM,OAAO,QAC7F,qBAAKzB,UAAU,YAAf,SACI,oBAAGA,UAAU,6FAAb,cAA4GmB,EAA5G,eCLPO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAGZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAwBtC,OAfAC,qBAAU,WAGNxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAEGqB,EDpB0BK,CAAc1B,GAAlCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAGrB,OACI,qCACI,qBAAI3B,UAAU,iFAAd,cAAiGO,EAAjG,OACEoB,GAAY,mBAAG3B,UAAU,+CAAb,yBACd,qBAAKA,UAAU,4BAAf,SACI,qBAAKA,UAAU,WAAf,SAEIoB,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,eEfxBgB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,SAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,qCACI,oBAAIU,UAAU,uEAAd,0BACA,cAAC,EAAD,CAAaV,cAAeA,IAC5B,oBAAIU,UAAU,eAGVmC,EAAWnB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,U,MCX7B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.67b3650d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value)\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [ inputValue, ...cats]);\n            setinputValue('')\n        }\n    };\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                className=\"form-control bg-light animate__animated animate__bounceIn animate__delay-1s\"\n                type=\"text\"\n                placeholder=\"Buscar...\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\n","\n\nexport const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=24&api_key=VROQTHewMOyOO9aAS0mx9E3h4VRGgUeN`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n\n\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className=\"col-md-3\">\n            <div className=\"card\">\n                <img src={url} className=\"card-img-top animate__animated animate__zoomIn\" alt={title} height=\"200\" />\n                <div className=\"card-body\">\n                    <p className=\"card-text text-center text-primary animate__animated animate__rubberBand animate__delay-2s\"> {title} </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n\n    const { data:images ,loading } = useFetchGifs( category );\n\n\n    return (\n        <>\n            <h3 className=\"text-center text-info text-uppercase p-4 animate__animated animate__fadeInDown\"> {category} </h3>\n            { loading &&  <p className=\"text-danger animate__animated animate__flash\">Cargando...</p> }\n            <div className=\"container overflow-hidden\">\n                <div className=\"row gy-5\">\n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n                </div>\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n\n    useEffect(() => {\n\n\n        getGifs(category)\n            .then(imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n\n            });\n\n    }, [category]);\n\n    return state;\n\n}\n\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Hola']);\n\n    return (\n        <>\n            <h2 className=\"text-center text-secondary p-4 animate__animated animate__backInLeft\">Imagenes Gif</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr className=\"bg-primary\" />\n\n            {\n                categories.map(category => (\n\n                    <GifGrid\n                        key={category}\n                        category={category}\n                    />\n\n                ))\n            }\n        </>\n    )\n}\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}